{"version":3,"sources":["assets/shopping-cart.svg","redux/actions/index.js","Components/SongPage/SongPage.jsx","Components/SongsList/SongsListInput.jsx","contexts/AppHeaderContext.js","Components/SongsList/SongListItem.jsx","Components/SongsList/SongsListView.jsx","Components/SongsList/SongsContainer.jsx","Components/user/LoginDialog.jsx","Components/Common/UserSideBar.jsx","Components/Common/LimitSlider.jsx","assets/searchCriterias.js","Components/Common/DropDown.jsx","Components/Common/SettingsModal.jsx","Components/Common/AppHeader.jsx","Components/Cart/CartItem.jsx","Components/Cart/CartContainer.jsx","Components/Common/AppContainer.jsx","App.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/songsListReducer.js","redux/reducers/usersReducer.js","redux/reducers/cartReducer.js","redux/reducers/settingsReducer.js","redux/reducers/index.js","index.js"],"names":["module","exports","getSongsList","query","dispatch","finalUrl","song","undefined","limit","entity","fetch","then","res","json","songs","type","payload","results","updateSettings","settingsObj","useStyles","makeStyles","theme","root","width","marginTop","spacing","cartButton","maxWidth","height","connect","ownProps","addItemToCart","iTune","itune","props","location","state","Itune","classes","React","useState","open","setOpen","date","Date","releaseDate","toLocaleDateString","handleClose","className","src","artworkUrl100","alt","Typography","variant","gutterBottom","trackName","artistName","collectionName","collectionPrice","trackPrice","Tooltip","title","IconButton","onClick","color","Snackbar","autoHideDuration","onClose","Alert","severity","previewUrl","substring","length","controls","settings","getSongs","item","userItems","JSON","parse","localStorage","getItem","setItem","errorFlag","setErrorFlag","SearchClickHandler","trim","items","storedItem","find","name","storedItemIndex","indexOf","itemToRemoveIndex","minCounter","counter","splice","removeItemFromUserItems","push","stringify","fillSearchHistory","TextField","id","label","onKeyPress","event","key","onChange","e","target","value","AppHeaderContext","createContext","AppHeaderContextProvider","Provider","Consumer","SongListItem","appheaderFlags","useContext","linkClickHandler","changeFlags","Card","CardActionArea","trackId","to","pathname","CardMedia","component","image","CardContent","CardActions","SongsListView","prevProps","this","onListRefresh","context","map","Component","contextType","songsList","Container","progressBarFlag","setprogressBarFlag","CircularProgress","createUser","userName","handleCancleClose","Button","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","margin","fullWidth","DialogActions","list","fullList","left","setState","a","useEffect","anchor","toggleDrawer","disabled","data","disableUserSearchesButton","Drawer","clsx","role","onKeyDown","List","ListItem","button","ListItemText","primary","Slider","defaultValue","getAriaValueText","valueLabelDisplay","step","marks","min","max","movie","music","podcast","backgroundColor","palette","background","paper","anchorEl","setAnchorEl","selectedIndex","setSelectedIndex","options","searchCriterias","aria-label","aria-haspopup","aria-controls","currentTarget","secondary","keepMounted","Boolean","option","index","MenuItem","selected","handleMenuItemClick","modal","display","alignItems","justifyContent","menuButton","marginRight","border","boxShadow","shadows","padding","SettingsModal","edge","Modal","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","flexGrow","StyledBadge","withStyles","badge","right","top","Badge","cart","AppBar","position","Toolbar","badgeContent","CartItem","cartItem","Divider","_","require","removeItemFromCart","removeItuneFromCart","cartItemsObj","groupBy","cartItemsArray","Object","values","CartLogo","RemoveClickHandler","DeleteClickHandler","totalCost","Math","round","Number","EPSILON","setTotalCost","AppContainer","headerFlags","setheaderFlags","headerOptions","exact","path","SongsContainer","SongPage","cartContainer","App","window","hostname","match","user","manageSongsList","initialState","action","manageUsers","manageCart","filter","manageSettings","combineReducers","usersReducer","middleware","thunk","withDevTools","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.550f7c73.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shopping-cart.2f79694d.svg\";","/*\n * action types\n*/\nexport const GET_SONGS_LIST = 'GET_SONGS_LIST'\nexport const CREATE_USER = 'CREATE_USER'\nexport const ADD_ITEM_TO_CART = 'ADD_ITEM_TO_CART'\nexport const REMOVE_ITEM_FROM_CART = 'REMOVE_ITEM_FROM_CART'\nexport const REMOVE_ITUNE_FROM_CART = 'REMOVE_ITUNE_FROM_CART'\nexport const UPDATE_SETTINGS = 'UPDATE_SETTINGS'\n/*\n * action creators\n*/\n\nconst url = 'https://itunes.apple.com/search?term=';\n\nexport const getSongsList = (query) => dispatch => {\n    let finalUrl = url + `${query.song}`;\n\n    if (query.limit !== undefined) {\n        finalUrl = finalUrl + `&limit=${query.limit}`;\n    }\n    if (query.entity !== undefined) {\n        finalUrl = finalUrl + `&entity=${query.entity}`;\n    }\n    return fetch(finalUrl)\n        .then(res => res.json())\n        .then(songs => dispatch({ type: GET_SONGS_LIST, payload: songs.results }))\n}\n\nexport const createUser = (userName) => dispatch => {\n    return fetch('/api/users/' + userName)\n        .then(userName => dispatch({ type: CREATE_USER, payload: userName }))\n}\n\nexport const addItemToCart = (itune) => dispatch => {\n    dispatch({ type: ADD_ITEM_TO_CART, payload: itune })\n}\n\n\nexport const removeItemFromCart = (itune) => dispatch => {\n    dispatch({ type: REMOVE_ITEM_FROM_CART, payload: itune })\n}\n\nexport const removeItuneFromCart = (itune) => dispatch => {\n    dispatch({ type: REMOVE_ITUNE_FROM_CART, payload: itune })\n}\n\nexport const updateSettings = (settingsObj) => dispatch => {\n    dispatch({ type: UPDATE_SETTINGS, payload: settingsObj })\n}\n/*\nexport const updateSong = (song) => dispatch => {\n    return put('/api/song/', {\n        body: {\n            updatedSong: song\n        }\n    })\n        .then(res => res.json())\n        .then(newSong => dispatch({ type: UPDATE_SONG, payload: newSong }))\n}\n*/","import React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { addItemToCart } from '../../redux/actions/index';\nimport { connect } from 'react-redux';\nimport './Song.css'\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    addItemToCart: (iTune) => dispatch(addItemToCart(iTune)),\n});\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n    cartButton: {\n        width: '70px',\n        maxWidth: 500,\n        height: '70px',\n    }\n}));\n\n\nfunction SongPage(props) {\n    const song = props.location.state.Itune;\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const date = new Date(song.releaseDate).toLocaleDateString();\n    function isAudio() {\n        return song.previewUrl.substring(song.previewUrl.length - 4, song.previewUrl.length) === '.m4a';\n    }\n    function AddClickHandler() {\n        props.addItemToCart(song);\n        setOpen(true);\n    }\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    function player() {\n        if (isAudio()) {\n            return <audio className=\"audioPlayer\" controls><source src={song.previewUrl} type=\"audio/ogg\"></source></audio>;\n        } else {\n            return <video className=\"audioPlayer\" controls><source src={song.previewUrl} type=\"video/ogg\"></source></video>;\n        }\n    }\n    return (\n        <div>\n\n            <div className=\"ituneDetails\">\n                <div className=\"songHeader\">\n                    <span>\n                        <img src={song.artworkUrl100} alt='' />\n                    </span>\n                    <span>  <Typography variant=\"h2\" gutterBottom>\n                        {song.trackName}\n                    </Typography>\n                    </span>\n                </div>\n                <Typography variant=\"h4\" gutterBottom>\n                    Artist: {song.artistName}\n                </Typography>\n                {song.collectionName &&\n                    <Typography variant=\"h4\" gutterBottom>\n                        Album: {song.collectionName}\n                    </Typography>\n                }\n                <Typography variant=\"h4\" gutterBottom>\n                    Release Date:  {date}\n                </Typography>\n                <Typography variant=\"h4\" gutterBottom>\n                    Album Price: {song.collectionPrice}$\n                </Typography>\n                <Typography variant=\"h4\" gutterBottom>\n                    Itune Price {song.trackPrice}$\n                </Typography>\n                <Tooltip title=\"add to shopping cart\">\n                    <IconButton onClick={AddClickHandler} color=\"primary\">\n                        < AddShoppingCartIcon className={classes.cartButton} />\n                    </IconButton>\n                </Tooltip>\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                    <Alert onClose={handleClose} severity=\"success\">\n                        Item has been added to cart !\n        </Alert>\n                </Snackbar>\n            </div>\n            <div className=\"player\">{player()}</div>\n\n        </div>\n    );\n}\n\nexport default connect(null, mapDispatchToProps)(SongPage)","import React, { useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport IconButton from '@material-ui/core/IconButton';\nimport Alert from '@material-ui/lab/Alert';\nimport { getSongsList } from '../../redux/actions/index';\nimport './Songs.css';\nimport { connect } from 'react-redux';\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    getSongs: (item) => dispatch(getSongsList(item)),\n});\nconst mapStateToProps = (state) => {\n    return { settings: state.settings || { limit: 25 } }\n}\n\nfunction SongsListInput(props) {\n    var userItems = JSON.parse(localStorage.getItem('userItems'));\n    const [item, setItem] = useState('');\n    const [errorFlag, setErrorFlag] = useState(false);\n\n    function onkeyPress(event) {\n        if (event.key === \"Enter\") {\n            SearchClickHandler()\n        }\n    }\n    function changeHandler(e) {\n        setItem(e.target.value);\n    };\n    function SearchClickHandler() {\n        if (item.trim() !== '') {\n            props.getSongs({ song: item, limit: props.settings.limit, entity: props.settings.entity });\n            props.onClick();\n            setErrorFlag(false);\n            fillSearchHistory(item);\n        } else {\n            setErrorFlag(true);\n        }\n    }\n    function fillSearchHistory(item) {\n        if (!userItems || !userItems.items || userItems == null) {\n            userItems = { items: [] };\n        }\n        let storedItem = userItems.items.find(storedItem => storedItem.name === item);\n        let storedItemIndex = userItems.items.indexOf(storedItem);\n        if (storedItemIndex === -1) {\n            if (userItems.items.length === 10) {\n                removeItemFromUserItems();\n            }\n            userItems.items.push({ name: item, counter: 1 });\n            localStorage.setItem('userItems', JSON.stringify(userItems))\n        } else {\n            let counter = userItems.items[storedItemIndex].counter;\n            userItems.items.splice(storedItemIndex, 1, { name: item, counter: counter + 1 });\n            localStorage.setItem('userItems', JSON.stringify(userItems))\n        }\n    }\n\n    function removeItemFromUserItems() {\n        let itemToRemoveIndex;\n        let minCounter = userItems.items[0].counter;\n        for (let item of userItems.items) {\n            if (item.counter <= minCounter) {\n                itemToRemoveIndex = userItems.items.indexOf(item);\n            }\n        }\n        userItems.items.splice(itemToRemoveIndex, 1);\n    }\n\n\n    return (\n        <div>\n            <div >\n                <TextField id=\"outlined-basic\" label=\"Artist Name\" variant=\"outlined\" className='searchField' onKeyPress={onkeyPress} onChange={changeHandler} />\n                <IconButton onClick={SearchClickHandler}><SearchIcon></SearchIcon></IconButton>\n                {errorFlag > 0 &&\n                    <div className='searchField' >\n                        <Alert severity=\"error\">Pleas fill in artist name</Alert>\n                    </div>\n                }\n            </div>\n        </div>\n\n    );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(SongsListInput)","import React from 'react'\nconst AppHeaderContext = React.createContext({});\nexport const AppHeaderContextProvider = AppHeaderContext.Provider;\nexport const AppHeaderContextConsumer = AppHeaderContext.Consumer;\nexport default AppHeaderContext;","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport AppHeaderContext from '../../contexts/AppHeaderContext'\nimport './Songs.css'\n\nfunction SongListItem(props) {\n    const appheaderFlags = useContext(AppHeaderContext);\n    const song = props.song\n    const useStyles = makeStyles({\n        root: {\n            width: 150,\n            height: 300\n        },\n    });\n    const classes = useStyles();\n\n    function linkClickHandler() {\n        appheaderFlags.changeFlags(true)\n    }\n    return (\n        <div className=\"ituneCard\">\n            <Card className={classes.root}>\n                <CardActionArea>\n                    <Link key={song.trackId} to={{ pathname: `song/${song.trackId}`, state: { Itune: song } }} onClick={linkClickHandler}><CardMedia\n                        component=\"img\"\n                        height=\"140\"\n                        image={song.artworkUrl100}\n                    /></Link>\n                    <CardContent>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            <Link key={song.trackId} to={{ pathname: `song/${song.trackId}`, state: { Itune: song } }} onClick={linkClickHandler}>{song.trackName}</Link>\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {song.artistName}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n                <CardActions>\n                </CardActions>\n            </Card>\n        </div>\n    );\n}\nexport default SongListItem","import React from 'react';\nimport { connect } from 'react-redux';\nimport SongListItem from './SongListItem';\nimport './Songs.css';\nimport AppHeaderContext from '../../contexts/AppHeaderContext';\n\nconst mapStateToProps = (state) => {\n    return { items: state.songsList || [] }\n}\n\nclass SongsListView extends React.Component {\n    static contextType = AppHeaderContext;\n    componentDidUpdate(prevProps) {\n        // Typical usage (don't forget to compare props):\n        if (this.props.items !== prevProps.items) {\n            this.props.onListRefresh()\n        }\n    }\n\n    componentWillMount() {\n        this.context.changeFlags(false);\n    }\n    render() {\n        return (<ul className=\"resultsView\">\n            {this.props.items.map(song =>\n                <SongListItem key={this.props.items.indexOf(song)} song={song}></SongListItem>\n            )}\n        </ul>\n        );\n    }\n}\nexport default connect(mapStateToProps,\n    null\n)(SongsListView);","import React, { useState } from 'react';\nimport SongsListInput from './SongsListInput';\nimport SongsListView from './SongsListView';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './Songs.css'\n\nfunction Container() {\n    const [progressBarFlag, setprogressBarFlag] = useState(false);\n\n    function clickHandler() {\n        setprogressBarFlag(true);\n    };\n    function listRefreshed() {\n        setprogressBarFlag(false);\n    };\n    function showProgress() {\n        if (progressBarFlag) {\n            return <span className='spinner'><CircularProgress /></span>;\n        }\n        return <span className='spinner'></span>;\n    }\n\n    return (\n        <div>\n            <div className='searchArea'>\n                <div className='searchItmes'>\n                    {showProgress()}\n                    <span> <SongsListInput onClick={clickHandler} /></span>\n                </div>\n            </div>\n            <div>\n                <SongsListView onListRefresh={listRefreshed} /></div>\n        </div>\n    );\n}\nexport default Container","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { createUser } from '../../redux/actions/index';\nimport { connect } from 'react-redux';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Alert from '@material-ui/lab/Alert';\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    createUser: (userName) => dispatch(createUser(userName)),\n});\nfunction LoginDialog(props) {\n    const [open, setOpen] = React.useState(false);\n    const [item, setItem] = useState('');\n    const [errorFlag, setErrorFlag] = useState(false);\n\n    function changeHandler(e) {\n        setItem(e.target.value);\n    };\n    const handleClickOpen = () => {\n        setErrorFlag(false);\n        setOpen(true);\n    };\n\n    const handleSubscribeClose = () => {\n        if (item.trim() !== '') {\n            props.createUser(item);\n            setErrorFlag(false);\n            setOpen(false);\n        } else {\n            setErrorFlag(true);\n        }\n    };\n\n    const handleCancleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"inherit\" onClick={handleClickOpen}>\n                Login\n      </Button>\n            <Dialog open={open} onClose={handleCancleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To enjoy better user experience from this website, please enter a user name here.\n          </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"User Name\"\n                        type=\"email\"\n                        fullWidth\n                        onChange={changeHandler}\n                    />\n                    {errorFlag > 0 &&\n                        <div>\n                            <Alert severity=\"error\">Pleas fill in user name</Alert>\n                        </div>\n                    }\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCancleClose} color=\"primary\">\n                        Cancel\n          </Button>\n                    <Button onClick={handleSubscribeClose} color=\"primary\">\n                        Subscribe\n          </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default connect(null, mapDispatchToProps)(LoginDialog)","import React, { useState, useEffect, useContext } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { getSongsList } from '../../redux/actions/index';\nimport { connect } from 'react-redux';\nimport AppHeaderContext from '../../contexts/AppHeaderContext'\n\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    getSongs: (item) => dispatch(getSongsList({ song: item })),\n});\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n});\n\nfunction UserSideBar(props) {\n    const appheaderFlags = useContext(AppHeaderContext);\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        left: false,\n    });\n\n    const [item, setItem] = useState('');\n    useEffect(() => {\n        if (item.trim() !== '') {\n            props.getSongs(item);\n        }\n    }, [item]);\n    async function SearchClickHandler(name) {\n        setItem(name);\n        props.getSongs(name);\n\n    }\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    const list = (anchor) => (\n\n        <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            {JSON.parse(localStorage.getItem('userItems')) !== undefined && JSON.parse(localStorage.getItem('userItems')) !== null &&\n                <div>\n                    <List>\n                        {JSON.parse(localStorage.getItem('userItems')).items.map((item) => (\n                            <ListItem button key={item.name} onClick={() => SearchClickHandler(item.name)}>\n                                <ListItemText primary={item.name} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </div>\n            }\n        </div>\n    );\n\n    return (\n        <div>\n            <Button disabled={appheaderFlags.data.disableUserSearchesButton} color='inherit' onClick={toggleDrawer('left', true)}>My Searches</Button>\n            <Drawer anchor='left' open={state['left']} onClose={toggleDrawer('left', false)}>\n                {list('left')}\n            </Drawer>\n        </div>\n    );\n}\n\nexport default connect(null, mapDispatchToProps)(UserSideBar)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nimport { updateSettings } from '../../redux/actions/index';\nimport { connect } from 'react-redux';\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    updateSettings: (item) => dispatch(updateSettings(item)),\n});\n\nconst useStyles = makeStyles({\n    root: {\n        width: 300,\n    },\n});\n\nfunction LimitSlider(props) {\n    const classes = useStyles();\n\n    function valuetext(value) {\n        props.updateSettings(['limit', value])\n        return value;\n    }\n\n    return (\n        <div className={classes.root}>\n            <Typography id=\"discrete-slider\" gutterBottom>\n                Results limit\n      </Typography>\n            <Slider\n                defaultValue={30}\n                getAriaValueText={valuetext}\n                aria-labelledby=\"discrete-slider\"\n                valueLabelDisplay=\"auto\"\n                step={10}\n                marks\n                min={1}\n                max={50}\n            />\n        </div>\n    );\n}\nexport default connect(null, mapDispatchToProps)(LimitSlider)","export default {\n    movie: ['movieArtist', 'movie'],\n    music: ['musicArtist', 'musicTrack', 'album', 'musicVideo', 'mix', 'song'],\n    podcast:['podcastAuthor', 'podcast'],\n    limit: []\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport searchCriterias from '../../assets/searchCriterias'\nimport {updateSettings} from '../../redux/actions/index'\nimport { connect } from 'react-redux';\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    updateSettings: (item) => dispatch(updateSettings(item)),\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nfunction DropDown(props) {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [selectedIndex, setSelectedIndex] = React.useState(1);\n    const options = searchCriterias[props.label] || [];\n\n    const handleClickListItem = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuItemClick = (event, index) => {\n        setSelectedIndex(index);\n        props.updateSettings([props.label, options[index]])\n        setAnchorEl(null);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div className={classes.root}>\n            <List component=\"nav\" aria-label=\"Device settings\">\n                <ListItem\n                    button\n                    aria-haspopup=\"true\"\n                    aria-controls=\"lock-menu\"\n                    aria-label=\"when device is locked\"\n                    onClick={handleClickListItem}\n                >\n                    <ListItemText primary={props.label} secondary={options[selectedIndex]} />\n                </ListItem>\n            </List>\n            <Menu\n                id=\"lock-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                {options.map((option, index) => (\n                    <MenuItem\n                        key={option}\n                        selected={index === selectedIndex}\n                        onClick={(event) => handleMenuItemClick(event, index)}\n                    >\n                        {option}\n                    </MenuItem>\n                ))}\n            </Menu>\n        </div>\n    );\n}\n\nexport default connect(null, mapDispatchToProps)(DropDown)","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from './LimitSlider';\nimport DropDown from './DropDown';\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    paper: {\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\n\nexport default function SettingsModal() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div>\n            <IconButton edge=\"start\" onClick={handleOpen} className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                <MenuIcon />\n            </IconButton>\n            <Modal\n                aria-labelledby=\"transition-modal-title\"\n                aria-describedby=\"transition-modal-description\"\n                className={classes.modal}\n                open={open}\n                onClose={handleClose}\n                closeAfterTransition\n                BackdropComponent={Backdrop}\n                BackdropProps={{\n                    timeout: 500,\n                }}\n            >\n                <Fade in={open}>\n                    <div className={classes.paper}>\n                        <Typography variant=\"h5\" gutterBottom>\n                            Search Settings:\n                    </Typography>\n                        <Slider></Slider>\n                        <DropDown label={'movie'}></DropDown>\n                        <DropDown label={'music'}></DropDown>\n                        <DropDown label={'podcast'}></DropDown>\n                    </div>\n                </Fade>\n            </Modal>\n        </div>\n    );\n}","import React, { useContext } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport Badge from '@material-ui/core/Badge';\nimport IconButton from '@material-ui/core/IconButton';\nimport LoginDialog from './../user/LoginDialog'\nimport UserSideBar from '../Common/UserSideBar';\nimport SettingsModal from './SettingsModal';\nimport { Link } from 'react-router-dom';\nimport AppHeaderContext from '../../contexts/AppHeaderContext'\n\nimport { connect } from 'react-redux';\nimport './Common.css'\nconst mapStateToProps = (state) => {\n  return { cart: state.cart || { items: [] } }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  title: {\n    flexGrow: 1,\n  },\n  cartButton: {\n    color: 'white'\n  }\n}));\n\nconst StyledBadge = withStyles((theme) => ({\n  badge: {\n    right: -3,\n    top: 13,\n    border: `2px solid ${theme.palette.background.paper}`,\n    padding: '0 4px',\n    color: 'lightgrey'\n  },\n}))(Badge);\n\nfunction AppHeader(props) {\n  const classes = useStyles();\n  const appheaderFlags = useContext(AppHeaderContext);\n\n  function mainLinkClickHandler() {\n    appheaderFlags.changeFlags(false)\n  }\n\n  function cartLinkClickHandler() {\n    appheaderFlags.changeFlags(true)\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <SettingsModal></SettingsModal>\n\n          <div className={classes.title}>\n            <Link className='homeLink' to={{ pathname: '/' }} onClick={mainLinkClickHandler} >\n              <Typography variant=\"h6\">\n                ITunes search engine\n          </Typography>\n            </Link>\n          </div>\n\n          <Link to={{ pathname: '/cart' }} onClick={cartLinkClickHandler} >\n            <IconButton aria-label=\"cart\">\n              <StyledBadge badgeContent={props.cart.items.length}>\n                <ShoppingCartIcon className={classes.cartButton} />\n              </StyledBadge>\n            </IconButton>\n          </Link>\n\n\n          <UserSideBar></UserSideBar>\n          <LoginDialog></LoginDialog>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps, null)(AppHeader);","import React from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport './Cart.css'\n\n\nfunction CartItem(props) {\n\n    return (\n        <div>\n            <div className=\"carItemDetailsWrapper\">\n                <span>\n                    <img src={props.cartItem[0].artworkUrl100} alt='' />\n                </span>\n                <span className='cartItemDetail'>{props.cartItem[0].trackName}</span>\n                <span className='cartItemDetail'>Quantity: {props.cartItem.length}</span>\n                <span className='cartItemDetail'>Price: {props.cartItem[0].trackPrice}$</span>\n                <span className='cartItemDetail'> Total Price: {props.cartItem[0].trackPrice * props.cartItem.length}$</span>\n            </div>\n            <Divider variant=\"middle\" />\n        </div>\n    );\n}\nexport default CartItem;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport CartItem from './CartItem';\nimport { connect } from 'react-redux';\nimport CartLogo from '../../assets/shopping-cart.svg';\nimport Button from '@material-ui/core/Button';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { removeItemFromCart } from '../../redux/actions/index';\nimport { removeItuneFromCart } from '../../redux/actions/index';\nimport RemoveShoppingCartRoundedIcon from '@material-ui/icons/RemoveShoppingCartRounded';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './Cart.css'\nconst _ = require('lodash');\n\nconst mapStateToProps = (state) => {\n    return { items: state.cart.items || [] }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    removeItemFromCart: (cartItem) => dispatch(removeItemFromCart(cartItem)),\n    removeItuneFromCart: (cartItem) => dispatch(removeItuneFromCart(cartItem)),\n\n});\n\n\nfunction setTotalCost(items) {\n    let totalCost = 0;\n    for (let item of items) {\n        totalCost += item[0].trackPrice * item.length;\n    }\n\n    return Math.round((totalCost + Number.EPSILON) * 100) / 100\n}\n\n\n\nfunction CartContainer(props) {\n    const cartItemsObj = _.groupBy(props.items, 'trackId') || {};\n    const cartItemsArray = Object.values(cartItemsObj);\n\n    function RemoveClickHandler(item) {\n        props.removeItemFromCart({ cartItem: item[0].trackId });\n    }\n\n    function DeleteClickHandler(item) {\n        props.removeItuneFromCart({ cartItem: item[0].trackId });\n    }\n    return (\n        <div>\n            <div>\n                <div className=\"cartImageWrapper\">\n                    <img className=\"cartImage\" src={CartLogo} alt=''></img>\n                    <Typography variant=\"h4\" gutterBottom>\n                        My Cart\n                </Typography>\n                </div>\n                <div>\n                    <ul>\n                        {cartItemsArray.map(item =>\n                            <div className=\"cartItemWrapper\" key={cartItemsArray.indexOf(item)}>\n                                <span className='cartItemSpan'>\n                                    <CartItem cartItem={item}></CartItem>\n                                </span>\n                                <span>\n                                    <div className=\"minusButton\">\n                                        <Tooltip title=\"Remove one item of this product\">\n                                            <Button onClick={() => RemoveClickHandler(item)} >\n                                                <RemoveIcon></RemoveIcon>\n                                            </Button>\n                                        </Tooltip>\n                                    </div>\n                                    <div>\n                                        <Tooltip title=\"Remove all items for this product\">\n                                            <Button onClick={() => DeleteClickHandler(item)} >\n                                                <RemoveShoppingCartRoundedIcon></RemoveShoppingCartRoundedIcon>\n                                            </Button>\n                                        </Tooltip>\n                                    </div>\n                                </span>\n                            </div>\n                        )}\n                    </ul>\n\n                </div>\n                <div>\n                    <Typography variant=\"h4\" gutterBottom>\n                        Total amount: {setTotalCost(cartItemsArray)}$\n                    </Typography>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CartContainer)","import React, { useState } from 'react'; import {\n    BrowserRouter as Router, Switch,\n    Route\n} from 'react-router-dom';\nimport SongPage from '../SongPage/SongPage';\nimport SongsContainer from '../SongsList/SongsContainer';\nimport AppHeader from '../Common/AppHeader'\nimport cartContainer from '../Cart/CartContainer'\nimport { AppHeaderContextProvider } from '../../contexts/AppHeaderContext'\n\n\nfunction AppContainer() {\n    const [headerFlags, setheaderFlags] = useState({\n        disableUserSearchesButton: false\n    });\n    const headerOptions = {\n        data: headerFlags,\n        changeFlags: (value) => setheaderFlags({ disableUserSearchesButton: value }),\n    }\n\n    return (\n        <Router> <div>\n            <AppHeaderContextProvider value={headerOptions}>\n                <AppHeader></AppHeader>\n            </AppHeaderContextProvider>\n            <Switch>\n                <Route exact path=\"/ItunesClient\"> <AppHeaderContextProvider value={headerOptions}>\n                    <SongsContainer />\n                </AppHeaderContextProvider>\n                    ￼</Route>\n                <Route exact path=\"/\"> <AppHeaderContextProvider value={headerOptions}>\n                    <SongsContainer />\n                </AppHeaderContextProvider>\n                    ￼</Route>\n                <Route path=\"/song\" component={SongPage}>\n                </Route>\n                <Route path=\"/cart\" component={cartContainer}></Route>\n            </Switch>\n        </div> </Router>\n    );\n}\nexport default AppContainer;","import React from 'react';\nimport './App.css';\nimport AppContainer from './Components/Common/AppContainer'\nfunction App() {\n  return (\n    <div>\n      <AppContainer /></div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export default {\n  songs: [],\n  user: '',\n  cart: localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : {\n    items: []\n  },\n  settings: {\n    limit: 25,\n    entity: undefined\n  }\n};\n","import { GET_SONGS_LIST, } from './../actions/index'\nimport initialState from './initialState'\nfunction manageSongsList(state = initialState.songs, action) {\n    switch (action.type) {\n        case GET_SONGS_LIST:\n            return action.payload;\n        default: return state\n    }\n}\nexport default manageSongsList;","import { CREATE_USER } from '../actions/index'\nimport initialState from './initialState'\nfunction manageUsers(state = initialState.user, action) {\n    switch (action.type) {\n        case CREATE_USER:\n            return action.payload;\n        default: return state\n    }\n}\nexport default manageUsers;","import { ADD_ITEM_TO_CART } from '../actions/index'\nimport { REMOVE_ITEM_FROM_CART } from '../actions/index'\nimport { REMOVE_ITUNE_FROM_CART } from '../actions/index'\n\nimport initialState from './initialState'\nfunction manageCart(cart = initialState.cart, action) {\n    switch (action.type) {\n        case ADD_ITEM_TO_CART:\n            cart.items.push(action.payload);\n            localStorage.setItem('cart', JSON.stringify(cart))\n            return {\n                items: [...cart.items]\n            };\n        case REMOVE_ITEM_FROM_CART:\n            let iTune = cart.items.find(item => item.trackId === action.payload.cartItem)\n            let index = cart.items.indexOf(iTune);\n            cart.items.splice(index, 1);\n            localStorage.setItem('cart', JSON.stringify(cart))\n            return {\n                items: [...cart.items]\n            };\n        case REMOVE_ITUNE_FROM_CART:\n            cart.items = cart.items.filter(item => item.trackId !== action.payload.cartItem)\n            localStorage.setItem('cart', JSON.stringify(cart))\n            return {\n                items: [...cart.items]\n            };\n        default: return cart\n    }\n}\nexport default manageCart;","import { UPDATE_SETTINGS } from '../actions/index'\nimport initialState from './initialState'\nfunction manageSettings(settings = initialState.settings, action) {\n    switch (action.type) {\n        case UPDATE_SETTINGS:\n            settings[action.payload[0]] = action.payload[1];\n            return settings;\n        default: return settings\n    }\n}\nexport default manageSettings;","import { combineReducers } from 'redux'\nimport songsList from './songsListReducer'\nimport usersReducer from './usersReducer'\nimport cart from './cartReducer';\nimport settings from './settingsReducer';\nexport default combineReducers({\n    songsList,\n    usersReducer,\n    cart,\n    settings\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport rootReducer from './redux/reducers'\nimport thunk from 'redux-thunk';\nconst middleware = [\n  thunk\n];\nconst withDevTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n/*\nconst enhancers = compose(window.__REDUX_DEVTOOLS_EXTENSION__ &&\n  window.__REDUX_DEVTOOLS_EXTENSION__());\n  */\nconst store = createStore(rootReducer, withDevTools(\n  applyMiddleware(...middleware)));\nReactDOM.render(<Provider store={store}><App /></Provider>,\n  document.getElementById('root'));\nserviceWorker.unregister();"],"sourceRoot":""}